# Ruff configuration for AMI Files module

[lint]
# Enable these rule categories
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EXE",    # flake8-executable
    "ISC",    # flake8-implicit-str-concat
    "PIE",    # flake8-pie
    "PYI",    # flake8-pyi
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "SIM",    # flake8-simplify
    "TID",    # flake8-tidy-imports
    "ARG",    # flake8-unused-arguments
    "RUF",    # Ruff-specific rules
    "S",      # flake8-bandit (security)
]

# Ignore these specific rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert (needed for tests)
    "S105",   # Possible hardcoded password
    "S106",   # Possible hardcoded password
    "S603",   # subprocess without shell equals true (git commands are safe)
    "S607",   # Starting a process with partial executable path (git is standard)
    "ARG001", # Unused function argument
    "ARG002", # Unused method argument
    "RET504", # Unnecessary assignment before return
    "C901",   # Function too complex
    "PLR0912", # Too many branches
    "PLR0911", # Too many return statements
    "PLR2004", # Magic value in comparison
    "SIM108", # Use ternary operator
    "SIM102", # Use single if statement
]

# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []

[lint.per-file-ignores]
# Ignore assert statements in test files
"tests/**/*.py" = ["S101", "PLR2004", "ARG002"]
# Ignore security warnings in test fixtures
"tests/fixtures/*.py" = ["S"]
# Ignore all issues in localfs (legacy code)
"localfs/**/*.py" = ["ALL"]

[format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Use Unix-style line endings
line-ending = "lf"